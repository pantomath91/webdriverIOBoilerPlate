apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    ndkVersion "22.0.7026061"
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.ns.testapp.ui"

        /* networkSecurityConfig requires minSdkVersion 24, but keep this minSdkVersion 21 to
         * match SDK docs for partners
         */
        minSdkVersion 23
        targetSdkVersion 29
        versionName "${getVersionNameTimestamp()}"
        versionCode getVersionCodeTimestamp()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 1. Adding JAVA8 compability option as network plugin of flipper required this
    // 2. No static method metafactory

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    //other repositories here
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation "com.google.android.material:material:1.3.0"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    //NetspendSdk dependencies required
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation files('libs/netspendsdk-release.aar')

    // Adding below library as it was unable to fetch from netspend-sdk
    implementation "de.adorsys.android:securestoragelibrary:1.2.4"
    implementation 'org.bitbucket.b_c:jose4j:0.6.4'

    //Android dependencies required by Ingo Money SDK
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //Third party dependencies required by Ingo Money SDK
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.romandanylyk:pageindicatorview:1.0.1'
    implementation "org.apache.commons:commons-imaging:1.0-alpha2"

    //Ingo Money SDK AAR Files
    implementation(name: 'api-release', ext: 'aar')
    implementation(name: 'barcode-release', ext: 'aar')
    implementation(name: 'barcodecontroller-release', ext: 'aar')
    implementation(name: 'cardio-release', ext: 'aar')
    implementation(name: 'creditcardcontroller-release', ext: 'aar')
    implementation(name: 'fraudforce-lib-4.2.0-release', ext: 'aar')
    implementation(name: 'imageutils-release', ext: 'aar')
    implementation(name: 'ingo-image-processor-android-release', ext: 'aar')
    implementation(name: 'ingo-image-processor-android-video-release', ext: 'aar')
    implementation(name: 'mibidata-release', ext: 'aar')
    implementation(name: 'misnapcamera-release', ext: 'aar')
    implementation(name: 'misnapcontroller-release', ext: 'aar')
    implementation(name: 'misnapscience-release', ext: 'aar')
    implementation(name: 'misnapworkflow-release', ext: 'aar')
    implementation(name: 'misnapworkflow_UX2_ingo-release', ext: 'aar')
    implementation(name: 'sanselan-release', ext: 'aar')
    implementation(name: 'sdk-ingo-release', ext: 'aar')
    implementation 'com.karumi:dexter:6.2.2'


    // ************************************Some new library**********************************
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    // gson convertor
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // android material
    implementation "com.google.android.material:material:1.3.0"

    // flipper-dependencies
    def flipper_version = '0.68.0'
    debugImplementation "com.facebook.flipper:flipper:$flipper_version"
    debugImplementation "com.facebook.flipper:flipper-network-plugin:$flipper_version"
    debugImplementation 'com.facebook.soloader:soloader:0.9.0'

    // Include `flipperandroidnoop` and  `soloadernoop` individually
    releaseImplementation 'com.github.theGlenn.flipper-android-no-op:flipperandroidnoop:0.4.0'
    releaseImplementation 'com.github.theGlenn.flipper-android-no-op:soloadernoop:0.4.0'

    // Includes both libraries
    releaseImplementation 'com.github.theGlenn:flipper-android-no-op:0.4.0'
}

// This may stop working in 2022, although this isnt going to be released on googlePlayStore,
// so it may not matter https://stackoverflow.com/a/28043555/346485
static def getVersionNameTimestamp() {
    return new Date().format('yy.MM.ddHHmm')
}

def getVersionCodeTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyMMddHHmm')
    def code = formattedDate.toInteger()
    println sprintf("VersionCode: %d", code)
    return code
}
